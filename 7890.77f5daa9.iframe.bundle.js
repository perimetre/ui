"use strict";(self.webpackChunk_perimetre_ui=self.webpackChunk_perimetre_ui||[]).push([[7890],{"./src/components/AutocompleteDropdownInput/AutocompleteDropdownInput.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{c:()=>AutocompleteDropdownInput});var _home_runner_work_ui_ui_node_modules_babel_runtime_helpers_esm_extends_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js"),_home_runner_work_ui_ui_node_modules_babel_runtime_helpers_esm_objectWithoutProperties_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),_Icons__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Icons/index.tsx"),_hook__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/AutocompleteDropdownInput/hook.tsx"),_excluded=["options","initialSelectedItems","isSingleSelect","displayRegardlessIfSearching","displayRegardlessIfFocused","onItemToggle","transformItems","defaultValue","value","ignoreFilter","onChange","displaySelected","label","translations","renderButtons","chipFullSize"],_excluded2=["onMouseMove","className","isSelected"],__jsx=react__WEBPACK_IMPORTED_MODULE_0__.createElement,AutocompleteDropdownInput=function AutocompleteDropdownInput(_ref){var _ref$options=_ref.options,options=void 0===_ref$options?[]:_ref$options,initialSelectedItems=_ref.initialSelectedItems,isSingleSelect=_ref.isSingleSelect,displayRegardlessIfSearching=_ref.displayRegardlessIfSearching,displayRegardlessIfFocused=_ref.displayRegardlessIfFocused,onItemToggle=_ref.onItemToggle,transformItems=_ref.transformItems,_ref$defaultValue=_ref.defaultValue,defaultValue=void 0===_ref$defaultValue?"":_ref$defaultValue,value=_ref.value,ignoreFilter=_ref.ignoreFilter,onChange=_ref.onChange,displaySelected=_ref.displaySelected,label=_ref.label,translations=_ref.translations,renderButtons=_ref.renderButtons,chipFullSize=_ref.chipFullSize,inputProps=(0,_home_runner_work_ui_ui_node_modules_babel_runtime_helpers_esm_objectWithoutProperties_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_ref,_excluded),_useAutocompleteInput=(0,_hook__WEBPACK_IMPORTED_MODULE_3__.T)({id:null==inputProps?void 0:inputProps.id,options,initialSelectedItems,isSingleSelect,displayRegardlessIfSearching,displayRegardlessIfFocused,onItemToggle,transformItems,defaultValue,value,ignoreFilter,onChange,displaySelected}),isOpen=_useAutocompleteInput.isOpen,filteredOptions=_useAutocompleteInput.filteredOptions,selectedItems=_useAutocompleteInput.selectedItems,getRootProps=_useAutocompleteInput.getRootProps,getLabelProps=_useAutocompleteInput.getLabelProps,getComboboxProps=_useAutocompleteInput.getComboboxProps,getInputProps=_useAutocompleteInput.getInputProps,getMenuProps=_useAutocompleteInput.getMenuProps,getItemProps=_useAutocompleteInput.getItemProps,getSelectedListProps=_useAutocompleteInput.getSelectedListProps,getSelectedItemProps=_useAutocompleteInput.getSelectedItemProps,toggleSelectedItem=_useAutocompleteInput.toggleSelectedItem;return __jsx("div",getRootProps(),label&&__jsx("label",getLabelProps({className:"pui-label-input"}),label),__jsx("div",getComboboxProps({className:"pui-dropdown-input-container"}),__jsx("input",(0,_home_runner_work_ui_ui_node_modules_babel_runtime_helpers_esm_extends_js__WEBPACK_IMPORTED_MODULE_5__.Z)({},inputProps,getInputProps({className:classnames__WEBPACK_IMPORTED_MODULE_1___default()("pui-text-input",null==inputProps?void 0:inputProps.className)}))),__jsx("ul",getMenuProps({className:"pui-dropdown-input-options"}),isOpen&&__jsx(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,__jsx("li",{className:"italic py-2 px-4 text-sm text-pui-paragraph-300"},(null==translations?void 0:translations.explanation)||"Press enter to select, ↑↓ to navigate, esc to dismiss"),filteredOptions&&filteredOptions.length>0?filteredOptions.map((function(item,index){var _getItemProps=getItemProps({item,index,className:"pui-dropdown-input-item flex items-center"}),onMouseMove=_getItemProps.onMouseMove,className=_getItemProps.className,isSelected=_getItemProps.isSelected,optionProps=(0,_home_runner_work_ui_ui_node_modules_babel_runtime_helpers_esm_objectWithoutProperties_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_getItemProps,_excluded2);return renderButtons?__jsx("li",{key:"result-".concat(item.id),className:classnames__WEBPACK_IMPORTED_MODULE_1___default()(className,"p-0"),onMouseMove},__jsx("span",(0,_home_runner_work_ui_ui_node_modules_babel_runtime_helpers_esm_extends_js__WEBPACK_IMPORTED_MODULE_5__.Z)({},optionProps,{className:"px-2 py-4 grow"}),item.label),renderButtons(item,isSelected)):__jsx("li",(0,_home_runner_work_ui_ui_node_modules_babel_runtime_helpers_esm_extends_js__WEBPACK_IMPORTED_MODULE_5__.Z)({key:"result-".concat(item.id),className},optionProps,{onMouseMove}),item.label)})):__jsx("li",{className:"pui-flex-center flex-col text-pui-paragraph-300"},__jsx(_Icons__WEBPACK_IMPORTED_MODULE_2__.AttentionIcon,{className:"my-2"}),(null==translations?void 0:translations.blankState)||"No results to show")))),selectedItems&&selectedItems.length>0&&__jsx("ul",getSelectedListProps({className:"pui-dropdown-input-selected-options"}),selectedItems.map((function(selectedItem,index){return __jsx("li",(0,_home_runner_work_ui_ui_node_modules_babel_runtime_helpers_esm_extends_js__WEBPACK_IMPORTED_MODULE_5__.Z)({key:"selected-".concat(selectedItem.id)},getSelectedItemProps({selectedItem,index,className:classnames__WEBPACK_IMPORTED_MODULE_1___default()("pui-dropdown-input-selected-item-base pui-animate-scaleHover focus:outline-none",{fullSize:chipFullSize})})),__jsx("button",{type:"button",className:"pui-btn-default pui-chip-btn flex items-center w-full",onClick:function onClick(){return toggleSelectedItem(selectedItem)}},__jsx("div",{className:"line-clamp-1 text-ellipsis flex-1"},selectedItem.label),__jsx("div",null,__jsx(_Icons__WEBPACK_IMPORTED_MODULE_2__.CrossIcon,{className:"pui-animate-scaleHover-target h-4 w-4 ml-2 mt-1"}))))}))))};AutocompleteDropdownInput.displayName="AutocompleteDropdownInput",AutocompleteDropdownInput.__docgenInfo={description:"A dropdown with autocomplete capabilities\n@param props the react component props\n@param props.options The options that should be displayed in the dropdown\n@param props.initialSelectedItems The list of selected items to initialize the selected array\n@param props.isSingleSelect Whether or not the user is allowed to only select a single item or multiple items\n@param props.displayRegardlessIfSearching Whether or not should always show the result list regardless if the user is searching or not.\n@param props.displayRegardlessIfFocused Whether or not should always show the result list regardless if the input is focused or not\n@param props.onItemToggle A callback that is called every time the user selects or unselects an item\n@param props.transformItems  Modifies the items being displayed, for example, to filter or sort them. It takes items as argument and expects them back in return.\n@param props.defaultValue The input defaultValue property\n@param props.value The input value property\n@param props.ignoreFilter Whether or not the options should be filtered based on user's input\n@param props.onChange  The input onChange callback\n@param props.label The text that should be placed in the input's label\n@param props.translations A translation object to override existing translations\n@param props.renderButtons The render function used to render the option buttons\n@param props.displaySelected Keep selected items in dropdown list regardless.\n@param props.chipFullSize Whether or not the chips should be full size",methods:[],displayName:"AutocompleteDropdownInput",props:{options:{defaultValue:{value:"[]",computed:!1},required:!1},defaultValue:{defaultValue:{value:"''",computed:!1},required:!1},label:{required:!1,tsType:{name:"string"},description:"The text that should be placed in the input's label"},translations:{required:!1,tsType:{name:"signature",type:"object",raw:"{\n  explanation?: string;\n  blankState?: string;\n}",signature:{properties:[{key:"explanation",value:{name:"string",required:!1}},{key:"blankState",value:{name:"string",required:!1}}]}},description:"A translation object to override existing translations"},renderButtons:{required:!1,tsType:{name:"signature",type:"function",raw:"(item: T, isSelected: boolean) => React.ReactNode",signature:{arguments:[{name:"item",type:{name:"T"}},{name:"isSelected",type:{name:"boolean"}}],return:{name:"ReactReactNode",raw:"React.ReactNode"}}},description:"The render function used to render the option buttons"},chipFullSize:{required:!1,tsType:{name:"boolean"},description:"Whether or not the chips should be full size"}}};try{AutocompleteDropdownInput.displayName="AutocompleteDropdownInput",AutocompleteDropdownInput.__docgenInfo={description:"A dropdown with autocomplete capabilities",displayName:"AutocompleteDropdownInput",props:{options:{defaultValue:{value:"[]"},description:"The options that should be displayed in the dropdown",name:"options",required:!1,type:{name:"T[]"}},initialSelectedItems:{defaultValue:null,description:"The list of selected items to initialize the selected array",name:"initialSelectedItems",required:!1,type:{name:"T[]"}},isSingleSelect:{defaultValue:{value:"false"},description:"Whether or not the user is allowed to only select a single item or multiple items",name:"isSingleSelect",required:!1,type:{name:"boolean"}},displayRegardlessIfSearching:{defaultValue:{value:"false"},description:"Whether or not should always show the result list regardless if the user is searching or not.",name:"displayRegardlessIfSearching",required:!1,type:{name:"boolean"}},displayRegardlessIfFocused:{defaultValue:{value:"true"},description:"Whether or not should always show the result list regardless if the input is focused or not\n(Only relevant when using TAB to focus the input)",name:"displayRegardlessIfFocused",required:!1,type:{name:"boolean"}},onItemToggle:{defaultValue:null,description:"A callback that is called every time the user selects or unselects an item",name:"onItemToggle",required:!1,type:{name:"((item: T, selected: boolean) => void)"}},transformItems:{defaultValue:null,description:"Modifies the items being displayed, for example, to filter or sort them. It takes items as argument and expects them back in return.",name:"transformItems",required:!1,type:{name:"((items: T[]) => T[])"}},ignoreFilter:{defaultValue:null,description:"Whether or not the options should be filtered based on user's input",name:"ignoreFilter",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"The input onChange callback",name:"onChange",required:!1,type:{name:"((value?: string) => void)"}},displaySelected:{defaultValue:null,description:"Keep selected items in dropdown list regardless.",name:"displaySelected",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"The text that should be placed in the input's label",name:"label",required:!1,type:{name:"string"}},translations:{defaultValue:null,description:"A translation object to override existing translations",name:"translations",required:!1,type:{name:"{ explanation?: string; blankState?: string; } | undefined"}},renderButtons:{defaultValue:null,description:"The render function used to render the option buttons",name:"renderButtons",required:!1,type:{name:"((item: T, isSelected: boolean) => ReactNode)"}},chipFullSize:{defaultValue:null,description:"Whether or not the chips should be full size",name:"chipFullSize",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AutocompleteDropdownInput/AutocompleteDropdownInput.tsx#AutocompleteDropdownInput"]={docgenInfo:AutocompleteDropdownInput.__docgenInfo,name:"AutocompleteDropdownInput",path:"src/components/AutocompleteDropdownInput/AutocompleteDropdownInput.tsx#AutocompleteDropdownInput"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/AutocompleteDropdownInput/hook.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{T:()=>useAutocompleteInput});var _home_runner_work_ui_ui_node_modules_babel_runtime_helpers_esm_toConsumableArray_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),_home_runner_work_ui_ui_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),downshift__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/downshift/dist/downshift.esm.js"),react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){(0,_home_runner_work_ui_ui_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__.Z)(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}var useAutocompleteInput=function useAutocompleteInput(_ref){var id=_ref.id,_ref$options=_ref.options,options=void 0===_ref$options?[]:_ref$options,selected=_ref.initialSelectedItems,isSingleSelect=_ref.isSingleSelect,displayRegardlessIfSearching=_ref.displayRegardlessIfSearching,displayRegardlessIfFocused=_ref.displayRegardlessIfFocused,onItemToggle=_ref.onItemToggle,transformItems=_ref.transformItems,_ref$defaultValue=_ref.defaultValue,defaultValue=void 0===_ref$defaultValue?"":_ref$defaultValue,value=_ref.value,ignoreFilter=_ref.ignoreFilter,onChange=_ref.onChange,displaySelected=_ref.displaySelected,_useState=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)("".concat(defaultValue||"")),inputValue=_useState[0],setInputValue=_useState[1];(0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)((function(){onChange&&onChange(inputValue)}),[inputValue,onChange]),(0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)((function(){value&&setInputValue(value)}),[value]);var initialSelectedItems=(0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)((function(){return selected||[]}),[]),compareFunction=(0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((function(resultItem,selectedItem){return resultItem.id===(null==selectedItem?void 0:selectedItem.id)}),[]),_useMultipleSelection=(0,downshift__WEBPACK_IMPORTED_MODULE_3__.M$)({initialSelectedItems,itemToString:function itemToString(item){return"".concat(item.id)},stateReducer:function stateReducer(_state,_ref2){var type=_ref2.type,changes=_ref2.changes,selectedItem=_ref2.selectedItem,activeIndex=_ref2.activeIndex;if(type===downshift__WEBPACK_IMPORTED_MODULE_3__.M$.stateChangeTypes.FunctionRemoveSelectedItem){var selectedItemsList=selectedItems||[],selectedItemIndex=selectedItemsList.findIndex((function(x){return compareFunction(x,selectedItem)})),newActiveIndex=activeIndex;return 1===selectedItemsList.length?newActiveIndex=-1:selectedItemIndex===selectedItemsList.length-1&&(newActiveIndex=selectedItemsList.length-2),_objectSpread(_objectSpread({},changes),{},{selectedItems:[].concat((0,_home_runner_work_ui_ui_node_modules_babel_runtime_helpers_esm_toConsumableArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(selectedItemsList.slice(0,selectedItemIndex)),(0,_home_runner_work_ui_ui_node_modules_babel_runtime_helpers_esm_toConsumableArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(selectedItemsList.slice(selectedItemIndex+1)))},{activeIndex:newActiveIndex})}return changes}}),_getSelectedItemProps=_useMultipleSelection.getSelectedItemProps,getDropdownProps=_useMultipleSelection.getDropdownProps,addSelectedItem=_useMultipleSelection.addSelectedItem,removeSelectedItem=_useMultipleSelection.removeSelectedItem,selectedItems=_useMultipleSelection.selectedItems,setSelectedItems=_useMultipleSelection.setSelectedItems,filteredOptions=function getFilteredItems(items){return ignoreFilter?items:displaySelected?items.filter((function(item){return item.label.toLowerCase().includes((inputValue||"").toLowerCase())})):items.filter((function(item){return selectedItems.indexOf(item)<0&&item.label.toLowerCase().includes((inputValue||"").toLowerCase())}))}(transformItems?transformItems(options):options);(0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)((function(){selected&&setSelectedItems(selected)}),[selected,setSelectedItems]);var toggleSelectedItem=(0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((function(itemToToggle){-1===selectedItems.findIndex((function(x){return compareFunction(x,itemToToggle)}))?(onItemToggle&&onItemToggle(itemToToggle,!0),isSingleSelect&&selectedItems&&selectedItems.length>0&&removeSelectedItem(selectedItems[0]),addSelectedItem(itemToToggle)):(onItemToggle&&onItemToggle(itemToToggle,!1),removeSelectedItem(itemToToggle))}),[addSelectedItem,isSingleSelect,onItemToggle,removeSelectedItem,selectedItems,compareFunction]),_useCombobox=(0,downshift__WEBPACK_IMPORTED_MODULE_3__.Kb)({itemToString:function itemToString(item){return"".concat(null==item?void 0:item.id)},isOpen:void 0!==displayRegardlessIfSearching&&!0===displayRegardlessIfSearching||void 0,inputValue,items:filteredOptions,onStateChange:function onStateChange(_ref3){var inputValue=_ref3.inputValue,type=_ref3.type,selectedItem=_ref3.selectedItem;switch(type){case downshift__WEBPACK_IMPORTED_MODULE_3__.Kb.stateChangeTypes.InputChange:setInputValue(inputValue||"");break;case downshift__WEBPACK_IMPORTED_MODULE_3__.Kb.stateChangeTypes.InputKeyDownEnter:case downshift__WEBPACK_IMPORTED_MODULE_3__.Kb.stateChangeTypes.ItemClick:case downshift__WEBPACK_IMPORTED_MODULE_3__.Kb.stateChangeTypes.InputBlur:selectedItem&&(toggleSelectedItem(selectedItem),setInputValue(""),selectItem(null))}}}),isOpen=_useCombobox.isOpen,_getLabelProps=_useCombobox.getLabelProps,_getMenuProps=_useCombobox.getMenuProps,_getInputProps=_useCombobox.getInputProps,_getComboboxProps=_useCombobox.getComboboxProps,highlightedIndex=_useCombobox.highlightedIndex,_getItemProps=_useCombobox.getItemProps,selectItem=_useCombobox.selectItem,openMenu=_useCombobox.openMenu,getRootProps=(0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((function(opts){return{className:classnames__WEBPACK_IMPORTED_MODULE_1___default()("autocomplete-root",null==opts?void 0:opts.className),style:null==opts?void 0:opts.style}}),[]),getInputContainerProps=(0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((function(opts){return{className:classnames__WEBPACK_IMPORTED_MODULE_1___default()("autocomplete-input-container",null==opts?void 0:opts.className),style:null==opts?void 0:opts.style}}),[]),getSelectedListProps=(0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((function(opts){return{className:classnames__WEBPACK_IMPORTED_MODULE_1___default()("autocomplete-selected-list",null==opts?void 0:opts.className),style:null==opts?void 0:opts.style}}),[]);return{isOpen,filteredOptions,selectedItems,getRootProps,getLabelProps:function getLabelProps(opts){return _getLabelProps(_objectSpread(_objectSpread({},opts),{},{id:"label-".concat(id),htmlFor:id}))},getComboboxProps:function getComboboxProps(opts){return _getComboboxProps(_objectSpread(_objectSpread({},opts),{},{className:classnames__WEBPACK_IMPORTED_MODULE_1___default()("autocomplete-combo",{open:isOpen},null==opts?void 0:opts.className)}))},getInputContainerProps,getInputProps:function getInputProps(opts){return _getInputProps(getDropdownProps(_objectSpread(_objectSpread({},opts),{},{id,className:classnames__WEBPACK_IMPORTED_MODULE_1___default()("autocomplete-input",{open:isOpen},null==opts?void 0:opts.className),onKeyDown:function onKeyDown(event){"Home"!==event.key&&"End"!==event.key&&"Backspace"!==event.key||(event.nativeEvent.preventDownshiftDefault=!0)},onFocus:function onFocus(){isOpen||displayRegardlessIfFocused||openMenu()},onClick:function onClick(){isOpen||openMenu()}})))},getMenuProps:function getMenuProps(opts){return _getMenuProps(_objectSpread(_objectSpread({},opts),{},{className:classnames__WEBPACK_IMPORTED_MODULE_1___default()("autocomplete-result-list",{open:isOpen},null==opts?void 0:opts.className),style:_objectSpread(_objectSpread({},null==opts?void 0:opts.style),{},{display:isOpen?"block":"none"})}))},getItemProps:function getItemProps(_ref4){var item=_ref4.item,index=_ref4.index,className=_ref4.className,style=_ref4.style,isSelected=selectedItems.findIndex((function(x){return x.id===item.id}))>-1;return _objectSpread(_objectSpread({},_getItemProps({item,index,className:classnames__WEBPACK_IMPORTED_MODULE_1___default()("autocomplete-result-item",{selected:isSelected,highlighted:highlightedIndex===index},className),style})),{},{isSelected})},getSelectedListProps,getSelectedItemProps:function getSelectedItemProps(_ref5){var selectedItem=_ref5.selectedItem,index=_ref5.index,className=_ref5.className,style=_ref5.style;return _getSelectedItemProps({className:classnames__WEBPACK_IMPORTED_MODULE_1___default()("autocomplete-selected-item",className),selectedItem,index,style})},toggleSelectedItem}};try{useAutocompleteInput.displayName="useAutocompleteInput",useAutocompleteInput.__docgenInfo={description:"The logic wrapper for the autocomplete",displayName:"useAutocompleteInput",props:{id:{defaultValue:null,description:"The autocomplete input id",name:"id",required:!0,type:{name:"string"}},options:{defaultValue:{value:"[]"},description:"The options that should be displayed in the dropdown",name:"options",required:!1,type:{name:"T[]"}},initialSelectedItems:{defaultValue:null,description:"The list of selected items to initialize the selected array",name:"initialSelectedItems",required:!1,type:{name:"T[]"}},isSingleSelect:{defaultValue:{value:"false"},description:"Whether or not the user is allowed to only select a single item or multiple items",name:"isSingleSelect",required:!1,type:{name:"boolean"}},displayRegardlessIfSearching:{defaultValue:{value:"false"},description:"Whether or not should always show the result list regardless if the user is searching or not.",name:"displayRegardlessIfSearching",required:!1,type:{name:"boolean"}},displayRegardlessIfFocused:{defaultValue:{value:"true"},description:"Whether or not should always show the result list regardless if the input is focused or not\n(Only relevant when using TAB to focus the input)",name:"displayRegardlessIfFocused",required:!1,type:{name:"boolean"}},onItemToggle:{defaultValue:null,description:"A callback that is called every time the user selects or unselects an item",name:"onItemToggle",required:!1,type:{name:"((item: T, selected: boolean) => void)"}},transformItems:{defaultValue:null,description:"Modifies the items being displayed, for example, to filter or sort them. It takes items as argument and expects them back in return.",name:"transformItems",required:!1,type:{name:"((items: T[]) => T[])"}},defaultValue:{defaultValue:{value:""},description:"The input defaultValue property",name:"defaultValue",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"The input value property",name:"value",required:!1,type:{name:"string"}},ignoreFilter:{defaultValue:null,description:"Whether or not the options should be filtered based on user's input",name:"ignoreFilter",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"The input onChange callback",name:"onChange",required:!1,type:{name:"((value?: string) => void)"}},displaySelected:{defaultValue:null,description:"Keep selected items in dropdown list regardless.",name:"displaySelected",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AutocompleteDropdownInput/hook.tsx#useAutocompleteInput"]={docgenInfo:useAutocompleteInput.__docgenInfo,name:"useAutocompleteInput",path:"src/components/AutocompleteDropdownInput/hook.tsx#useAutocompleteInput"})}catch(__react_docgen_typescript_loader_error){}}}]);