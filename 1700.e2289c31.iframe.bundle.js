"use strict";(self.webpackChunk_perimetre_ui=self.webpackChunk_perimetre_ui||[]).push([[1700],{"./src/components/AutocompleteInput/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{P:()=>AutocompleteInput});var _home_runner_work_ui_ui_node_modules_babel_runtime_helpers_esm_extends_js__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/extends.js"),_home_runner_work_ui_ui_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),_home_runner_work_ui_ui_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"),_home_runner_work_ui_ui_node_modules_babel_runtime_helpers_esm_objectWithoutProperties_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),_home_runner_work_ui_ui_node_modules_babel_runtime_regenerator_index_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@babel/runtime/regenerator/index.js"),_home_runner_work_ui_ui_node_modules_babel_runtime_regenerator_index_js__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_home_runner_work_ui_ui_node_modules_babel_runtime_regenerator_index_js__WEBPACK_IMPORTED_MODULE_2__),classnames__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_3__),downshift__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./node_modules/downshift/dist/downshift.esm.js"),lodash__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/lodash/lodash.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),_Icons__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/Icons/index.tsx"),_excluded=["options","initialSelectedItem","displayRegardlessIfSearching","onItemToggle","defaultValue","ignoreFilter","filterItem","itemToString","label","translations","renderButtons","renderItem","className","fetchMore","shouldFetchOnInit","loading","renderBlankState","getInputProps","getItemProps","getLabelProps","getMenuProps","isOpen","inputValue","highlightedIndex","toggleMenu","clearItems","clearSelection","closeMenu","getRootProps","getToggleButtonProps","openMenu","reset","selectHighlightedItem","selectItem","selectItemAtIndex","selectedItem","setHighlightedIndex","setItemCount","setState","unsetItemCount","containerClassName","error","success","help"],_excluded2=["className","isSelected","key"],__jsx=react__WEBPACK_IMPORTED_MODULE_0__.createElement;function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}var DownshiftAutocompleteContent=function DownshiftAutocompleteContent(_ref){var options=_ref.options,ignoreFilter=(_ref.initialSelectedItem,_ref.displayRegardlessIfSearching,_ref.onItemToggle,_ref.defaultValue,_ref.ignoreFilter),filterItem=_ref.filterItem,itemToString=_ref.itemToString,label=_ref.label,translations=_ref.translations,renderButtons=_ref.renderButtons,renderItem=_ref.renderItem,className=_ref.className,fetchMore=_ref.fetchMore,shouldFetchOnInit=_ref.shouldFetchOnInit,loading=_ref.loading,renderBlankState=_ref.renderBlankState,getInputProps=_ref.getInputProps,getItemProps=_ref.getItemProps,getLabelProps=_ref.getLabelProps,getMenuProps=_ref.getMenuProps,isOpen=_ref.isOpen,inputValue=_ref.inputValue,highlightedIndex=_ref.highlightedIndex,toggleMenu=_ref.toggleMenu,selectItem=(_ref.clearItems,_ref.clearSelection,_ref.closeMenu,_ref.getRootProps,_ref.getToggleButtonProps,_ref.openMenu,_ref.reset,_ref.selectHighlightedItem,_ref.selectItem),error=(_ref.selectItemAtIndex,_ref.selectedItem,_ref.setHighlightedIndex,_ref.setItemCount,_ref.setState,_ref.unsetItemCount,_ref.containerClassName,_ref.error),success=_ref.success,help=_ref.help,props=(0,_home_runner_work_ui_ui_node_modules_babel_runtime_helpers_esm_objectWithoutProperties_js__WEBPACK_IMPORTED_MODULE_6__.Z)(_ref,_excluded),isFetchingRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!1),_useState=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),didInitialize=_useState[0],setDidInitialize=_useState[1],fetchMoreDebounced=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((function(){return fetchMore?(0,lodash__WEBPACK_IMPORTED_MODULE_4__.debounce)(fetchMore,250,{maxWait:500}):void 0}),[fetchMore]);(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){var fetch=function(){var _ref2=(0,_home_runner_work_ui_ui_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_7__.Z)(_home_runner_work_ui_ui_node_modules_babel_runtime_regenerator_index_js__WEBPACK_IMPORTED_MODULE_2___default().mark((function _callee(){return _home_runner_work_ui_ui_node_modules_babel_runtime_regenerator_index_js__WEBPACK_IMPORTED_MODULE_2___default().wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:if(shouldFetchOnInit||didInitialize){_context.next=2;break}return _context.abrupt("return");case 2:if(isFetchingRef.current||!fetchMoreDebounced){_context.next=7;break}return isFetchingRef.current=!0,_context.next=6,fetchMoreDebounced(inputValue);case 6:isFetchingRef.current=!1;case 7:case"end":return _context.stop()}}),_callee)})));return function fetch(){return _ref2.apply(this,arguments)}}();fetch()}),[fetchMoreDebounced,inputValue,shouldFetchOnInit,didInitialize]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){setDidInitialize(!0)}),[]);var items=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((function(){return ignoreFilter?options:null==options?void 0:options.filter((function(item){return!inputValue||(filterItem?filterItem(item,inputValue):itemToString(item).toLowerCase().includes(inputValue))}))}),[filterItem,ignoreFilter,inputValue,itemToString,options]);return __jsx("div",null,label&&__jsx("label",getLabelProps({className:"pui-label-input"}),label),__jsx("div",{className:classnames__WEBPACK_IMPORTED_MODULE_3___default()("pui-dropdown-input-container",{error:!!error,success})},__jsx("input",(0,_home_runner_work_ui_ui_node_modules_babel_runtime_helpers_esm_extends_js__WEBPACK_IMPORTED_MODULE_8__.Z)({},getInputProps(function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){(0,_home_runner_work_ui_ui_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_1__.Z)(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}({className:classnames__WEBPACK_IMPORTED_MODULE_3___default()("pui-text-input",className)},props)),{onClick:function onClick(){return!isOpen&&toggleMenu()}})),__jsx("ul",getMenuProps({className:classnames__WEBPACK_IMPORTED_MODULE_3___default()("pui-dropdown-input-options",!isOpen&&"hidden")}),isOpen&&(loading?__jsx("div",{className:"p-2"},__jsx("div",{className:"flex items-center justify-center pui-spinner"})):__jsx(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,__jsx("li",{className:"italic py-2 px-4 text-sm text-pui-paragraph-300"},(null==translations?void 0:translations.explanation)||"Press enter to select, ↑↓ to navigate, esc to dismiss"),items&&items.length>0?items.map((function(item,index){var itemString=itemToString(item),_getItemProps=getItemProps({key:"result-".concat(item.id||index),item,index,className:"pui-dropdown-input-item flex items-center"}),className=_getItemProps.className,isSelected=_getItemProps.isSelected,key=_getItemProps.key,optionProps=(0,_home_runner_work_ui_ui_node_modules_babel_runtime_helpers_esm_objectWithoutProperties_js__WEBPACK_IMPORTED_MODULE_6__.Z)(_getItemProps,_excluded2),isHighlighted=highlightedIndex===index;return renderButtons?__jsx("li",{key,className:classnames__WEBPACK_IMPORTED_MODULE_3___default()(className,isHighlighted&&"highlighted","p-0 whitespace-pre-wrap pr-2")},__jsx("span",(0,_home_runner_work_ui_ui_node_modules_babel_runtime_helpers_esm_extends_js__WEBPACK_IMPORTED_MODULE_8__.Z)({},optionProps,{className:"px-2 py-4 grow"}),renderItem?renderItem(item,isSelected,isHighlighted):itemString),renderButtons(item,isSelected,isHighlighted)):__jsx("li",(0,_home_runner_work_ui_ui_node_modules_babel_runtime_helpers_esm_extends_js__WEBPACK_IMPORTED_MODULE_8__.Z)({key,className:classnames__WEBPACK_IMPORTED_MODULE_3___default()(className,isHighlighted&&"highlighted","whitespace-pre-wrap pr-2")},optionProps),renderItem?renderItem(item,isSelected,isHighlighted):itemString)})):renderBlankState?renderBlankState(selectItem):__jsx("li",{className:"pui-flex-center flex-col text-pui-paragraph-300"},__jsx(_Icons__WEBPACK_IMPORTED_MODULE_5__.AttentionIcon,{className:"my-2"}),(null==translations?void 0:translations.blankState)||"No results to show"))))),help&&!error&&__jsx("p",{className:"pui-help-text-input"},help),error&&__jsx("p",{className:"pui-animate-fadeDown pui-help-text-input text-pui-error"},error))};DownshiftAutocompleteContent.displayName="DownshiftAutocompleteContent";var AutocompleteInput=function AutocompleteInput(props){var itemToString=props.itemToString,onItemToggle=props.onItemToggle,initialSelectedItem=props.initialSelectedItem,selectedItem=props.selectedItem,defaultValue=props.defaultValue,displayRegardlessIfSearching=props.displayRegardlessIfSearching;return __jsx(downshift__WEBPACK_IMPORTED_MODULE_9__.ZP,{onChange:onItemToggle,itemToString,initialSelectedItem,selectedItem,initialInputValue:defaultValue,defaultIsOpen:void 0!==displayRegardlessIfSearching&&!0===displayRegardlessIfSearching||void 0},(function(autocompleteProps){return __jsx("div",autocompleteProps.getRootProps({refKey:"ref"},{suppressRefError:!0}),__jsx(DownshiftAutocompleteContent,(0,_home_runner_work_ui_ui_node_modules_babel_runtime_helpers_esm_extends_js__WEBPACK_IMPORTED_MODULE_8__.Z)({},props,autocompleteProps)))}))};AutocompleteInput.displayName="AutocompleteInput",AutocompleteInput.__docgenInfo={description:"A simple input with autocomplete capabilities\n@param props the react component props\n@param props.options The options that should be displayed in the dropdown\n@param props.initialSelectedItem The initial selected item\n@param props.selectedItem The selected item\n@param props.displayRegardlessIfSearching Whether or not should always show the result list regardless if the user is searching or not.\n@param props.onItemToggle A callback that is called every time the user selects or unselects an item\n@param props.defaultValue The input defaultValue property\n@param props.ignoreFilter Whether or not the options should be filtered based on user's input\n@param props.filterItem Predicate to modify the items on display, for example, filter based on the value\n@param props.itemToString Method used to convert the object item into the string that is shown on the dropdown\n@param props.label The text that should be placed in the input's label\n@param props.translations A translation object to override existing translations\n@param props.renderButtons The render function used to render the option buttons\n@param props.renderItem The render function used to render the dropdown item\n@param props.className The component classname\n@param props.fetchMore A callback for when the input changes so more items can be loaded\n@param props.shouldFetchOnInit Whether or not the options should be fetched on init\n@param props.loading Whether the options are loading",methods:[],displayName:"AutocompleteInput",props:{id:{required:!0,tsType:{name:"string"},description:"The autocomplete input id"},options:{required:!0,tsType:{name:"Array",elements:[{name:"Item"}],raw:"Item[]"},description:"The options that should be displayed in the dropdown"},initialSelectedItem:{required:!1,tsType:{name:"Item"},description:"The initial selected item"},selectedItem:{required:!1,tsType:{name:"union",raw:"Item | null",elements:[{name:"Item"},{name:"null"}]},description:"The initial selected item"},displayRegardlessIfSearching:{required:!1,tsType:{name:"boolean"},description:"Whether or not should always show the result list regardless if the user is searching or not.\n@default false"},help:{required:!1,tsType:{name:"string"},description:"If provided, displays a help text under the input"},error:{required:!1,tsType:{name:"string"},description:"The error text to replace the help text with"},success:{required:!1,tsType:{name:"boolean"},description:"Shows a success status"},containerClassName:{required:!1,tsType:{name:"string"},description:"The classname string prepended to the input container className"},onItemToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(item?: Item | null) => void",signature:{arguments:[{name:"item",type:{name:"union",raw:"Item | null",elements:[{name:"Item"},{name:"null"}]}}],return:{name:"void"}}},description:"A callback that is called every time the user selects or unselects an item"},defaultValue:{required:!1,tsType:{name:"string"},description:"The input defaultValue property"},ignoreFilter:{required:!1,tsType:{name:"boolean"},description:"Whether or not the options should be filtered based on user's input"},filterItem:{required:!0,tsType:{name:"signature",type:"function",raw:"(item: Item, inputValue: string) => boolean",signature:{arguments:[{name:"item",type:{name:"Item"}},{name:"inputValue",type:{name:"string"}}],return:{name:"boolean"}}},description:"Predicate to modify the items on display, for example, filter based on the value"},itemToString:{required:!0,tsType:{name:"signature",type:"function",raw:"(item: Item | null) => string",signature:{arguments:[{name:"item",type:{name:"union",raw:"Item | null",elements:[{name:"Item"},{name:"null"}]}}],return:{name:"string"}}},description:"Method used to convert the object item into the string that is shown on the dropdown"},label:{required:!1,tsType:{name:"string"},description:"The text that should be placed in the input's label"},translations:{required:!1,tsType:{name:"signature",type:"object",raw:"{\n  explanation?: string;\n  blankState?: string;\n}",signature:{properties:[{key:"explanation",value:{name:"string",required:!1}},{key:"blankState",value:{name:"string",required:!1}}]}},description:"A translation object to override existing translations"},renderButtons:{required:!1,tsType:{name:"signature",type:"function",raw:"(item: Item, isSelected: boolean, isHighlighted: boolean) => React.ReactNode",signature:{arguments:[{name:"item",type:{name:"Item"}},{name:"isSelected",type:{name:"boolean"}},{name:"isHighlighted",type:{name:"boolean"}}],return:{name:"ReactReactNode",raw:"React.ReactNode"}}},description:"The render function used to render the option buttons"},renderItem:{required:!1,tsType:{name:"signature",type:"function",raw:"(item: Item, isSelected: boolean, isHighlighted: boolean) => React.ReactNode",signature:{arguments:[{name:"item",type:{name:"Item"}},{name:"isSelected",type:{name:"boolean"}},{name:"isHighlighted",type:{name:"boolean"}}],return:{name:"ReactReactNode",raw:"React.ReactNode"}}},description:"The render function used to render the dropdown item"},renderBlankState:{required:!1,tsType:{name:"signature",type:"function",raw:"(selectItem: (item: Item) => void) => React.ReactNode",signature:{arguments:[{name:"selectItem",type:{name:"signature",type:"function",raw:"(item: Item) => void",signature:{arguments:[{name:"item",type:{name:"Item"}}],return:{name:"void"}}}}],return:{name:"ReactReactNode",raw:"React.ReactNode"}}},description:"The render function used to render the blank slate"},className:{required:!1,tsType:{name:"string"},description:"The component classname"},fetchMore:{required:!1,tsType:{name:"union",raw:"((value: string | null | undefined) => Promise<void>) | ((value: string | null | undefined) => void)",elements:[{name:"unknown"},{name:"unknown"}]},description:"A callback for when the input changes so more items can be loaded"},shouldFetchOnInit:{required:!1,tsType:{name:"boolean"},description:"Whether or not the options should be fetched on init"},loading:{required:!1,tsType:{name:"boolean"},description:"Whether the options are loading"}}};try{AutocompleteInput.displayName="AutocompleteInput",AutocompleteInput.__docgenInfo={description:"A simple input with autocomplete capabilities",displayName:"AutocompleteInput",props:{options:{defaultValue:null,description:"The options that should be displayed in the dropdown",name:"options",required:!0,type:{name:"Item[]"}},initialSelectedItem:{defaultValue:null,description:"The initial selected item",name:"initialSelectedItem",required:!1,type:{name:"{ id: string | number; }"}},selectedItem:{defaultValue:null,description:"The initial selected item",name:"selectedItem",required:!1,type:{name:"{ id: string | number; } | null"}},displayRegardlessIfSearching:{defaultValue:{value:"false"},description:"Whether or not should always show the result list regardless if the user is searching or not.",name:"displayRegardlessIfSearching",required:!1,type:{name:"boolean"}},help:{defaultValue:null,description:"If provided, displays a help text under the input",name:"help",required:!1,type:{name:"string"}},error:{defaultValue:null,description:"The error text to replace the help text with",name:"error",required:!1,type:{name:"string"}},success:{defaultValue:null,description:"Shows a success status",name:"success",required:!1,type:{name:"boolean"}},containerClassName:{defaultValue:null,description:"The classname string prepended to the input container className",name:"containerClassName",required:!1,type:{name:"string"}},onItemToggle:{defaultValue:null,description:"A callback that is called every time the user selects or unselects an item",name:"onItemToggle",required:!1,type:{name:"((item?: Item | null) => void)"}},defaultValue:{defaultValue:null,description:"The input defaultValue property",name:"defaultValue",required:!1,type:{name:"string"}},ignoreFilter:{defaultValue:null,description:"Whether or not the options should be filtered based on user's input",name:"ignoreFilter",required:!1,type:{name:"boolean"}},filterItem:{defaultValue:null,description:"Predicate to modify the items on display, for example, filter based on the value",name:"filterItem",required:!0,type:{name:"(item: Item, inputValue: string) => boolean"}},itemToString:{defaultValue:null,description:"Method used to convert the object item into the string that is shown on the dropdown",name:"itemToString",required:!0,type:{name:"(item: Item | null) => string"}},label:{defaultValue:null,description:"The text that should be placed in the input's label",name:"label",required:!1,type:{name:"string"}},translations:{defaultValue:null,description:"A translation object to override existing translations",name:"translations",required:!1,type:{name:"{ explanation?: string; blankState?: string; } | undefined"}},renderButtons:{defaultValue:null,description:"The render function used to render the option buttons",name:"renderButtons",required:!1,type:{name:"((item: Item, isSelected: boolean, isHighlighted: boolean) => ReactNode)"}},renderItem:{defaultValue:null,description:"The render function used to render the dropdown item",name:"renderItem",required:!1,type:{name:"((item: Item, isSelected: boolean, isHighlighted: boolean) => ReactNode)"}},renderBlankState:{defaultValue:null,description:"The render function used to render the blank slate",name:"renderBlankState",required:!1,type:{name:"((selectItem: (item: Item) => void) => ReactNode)"}},fetchMore:{defaultValue:null,description:"A callback for when the input changes so more items can be loaded",name:"fetchMore",required:!1,type:{name:"((value: string | null) => Promise<void>) | ((value: string | null) => void) | undefined"}},shouldFetchOnInit:{defaultValue:null,description:"Whether or not the options should be fetched on init",name:"shouldFetchOnInit",required:!1,type:{name:"boolean"}},loading:{defaultValue:null,description:"Whether the options are loading",name:"loading",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AutocompleteInput/index.tsx#AutocompleteInput"]={docgenInfo:AutocompleteInput.__docgenInfo,name:"AutocompleteInput",path:"src/components/AutocompleteInput/index.tsx#AutocompleteInput"})}catch(__react_docgen_typescript_loader_error){}}}]);